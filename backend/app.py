import os
from flask import Flask, request, abort, jsonify
from flask_cors import CORS
import json

from auth import requires_auth #,AuthError
import re
# def create_app(test_config=None):
# create and configure the app
from models import setup_db, Country, User


app = Flask(__name__)
setup_db(app)
CORS(app)

AD = Country(id=1, name="Andorra", alias="AD")
AE = Country(id=2, name="United Arab Emirates", alias="AE")
AF = Country(id=3, name="Afghanistan", alias="AF")
AG = Country(id=4, name="Antigua and Barbuda", alias="AG")
AI = Country(id=5, name="Anguilla", alias="AI")
AL = Country(id=6, name="Albania", alias="AL")
AM = Country(id=7, name="Armenia", alias="AM")
AN = Country(id=8, name="Netherlands Antilles", alias="AN")
AO = Country(id=9, name="Angola", alias="AO")
AQ = Country(id=10, name="Antarctica", alias="AQ")
AR = Country(id=11, name="Argentina", alias="AR")
AS = Country(id=12, name="American Samoa", alias="AS")
AT = Country(id=13, name="Austria", alias="AT")
AU = Country(id=14, name="Australia", alias="AU")
AW = Country(id=15, name="Aruba", alias="AW")
AX = Country(id=16, name="Åland Islands", alias="AX")
AZ = Country(id=17, name="Azerbaijan", alias="AZ")
BA = Country(id=18, name="Bosnia and Herzegovina", alias="BA")
BB = Country(id=19, name="Barbados", alias="BB")
BD = Country(id=20, name="Bangladesh", alias="Bangladesh")
BE = Country(id=21, name="Belgium", alias="BE")
BF = Country(id=22, name="Burkina Faso", alias="BF")
BG = Country(id=23, name="Bulgaria", alias="BG")
BH = Country(id=24, name="Bahrain", alias="BH")
BQ = Country(id=25, name="Bonaire, Sint Eustatius and Saba", alias="BQ")
BR = Country(id=26, name="Brazil", alias="BR")
BS = Country(id=27, name="Bahamas", alias="BS")
BT = Country(id=28, name="Bhutan", alias="BT")
BV = Country(id=29, name="Bouvet Island", alias="BV")
BW = Country(id=30, name="Botswana", alias="BW")
BY = Country(id=31, name="Belarus", alias="BY")
BZ = Country(id=32, name="Belize", alias="BZ")
CA = Country(id=33, name="Canada", alias="CA")
CC = Country(id=34, name="Cocos (Keeling) Islands", alias="CC")
CF = Country(id=35, name="Central African Republic", alias="CF")
CG = Country(id=36, name="Congo", alias="CG")
CH = Country(id=37, name="Switzerland", alias="CH")
CI = Country(id=38, name="Côte D'Ivoire", alias="CI")
CK = Country(id=39, name="Cook Islands", alias="CK")
CL = Country(id=40, name="Chile", alias="CL")
CM = Country(id=41, name="Cameroon", alias="CM")
CN = Country(id=42, name="China", alias="CN")
CO = Country(id=43, name="Colombia", alias="CO")
CR = Country(id=44, name="Costa Rica", alias="CR")
CU = Country(id=45, name="Cuba", alias="CU")
CV = Country(id=46, name="Cape Verde", alias="CV")
CW = Country(id=47, name="Curaçao", alias="CW")
CX = Country(id=48, name="Christmas Island", alias="CX")
CY = Country(id=49, name="Cyprus", alias="CY")
CZ = Country(id=50, name="Czech Republic", alias="CZ")
DE = Country(id=51, name="Germany", alias="DE")
DJ = Country(id=52, name="Djibouti", alias="DJ")
DK = Country(id=53, name="Denmark", alias="DK")
DM = Country(id=54, name="Dominica", alias="DM")
DO = Country(id=55, name="Dominican Republic", alias="DO")
DZ = Country(id=56, name="Algeria", alias="DZ")
EC = Country(id=57, name="Ecuador", alias="EC")
EE = Country(id=58, name="Estonia", alias="EE")
EG = Country(id=59, name="Egypt", alias="EG")
EH = Country(id=60, name="Western Sahara", alias="EH")
ER = Country(id=61, name="Eritrea", alias="ER")
ES = Country(id=62, name="Spain", alias="ES")
ET = Country(id=63, name="Ethiopia", alias="ET")
EU = Country(id=64, name="EU", alias="EU")
FI = Country(id=65, name="Finland", alias="FI")
FJ = Country(id=66, name="Fiji", alias="FJ")
FK = Country(id=67, name="Falkland Islands (Malvinas)", alias="FK")
FM = Country(id=68, name="Micronesia", alias="FM")
FO = Country(id=69, name="Faroe Islands", alias="FO")
FR = Country(id=70, name="France", alias="FR")
GA = Country(id=71, name="Gabon", alias="GA")
GB = Country(id=72, name="United Kingdom", alias="GB")
GD = Country(id=73, name="Grenada", alias="GD")
GE = Country(id=74, name="Georgia", alias="GE")
GF = Country(id=75, name="French Guiana", alias="GF")
GG = Country(id=76, name="Guernsey", alias="GG")
GH = Country(id=77, name="Ghana", alias="GH")
GI = Country(id=78, name="Gibraltar", alias="GI")
GL = Country(id=79, name="Greenland", alias="GL")
GM = Country(id=80, name="Gambia", alias="GM")
GN = Country(id=81, name="Guinea", alias="GN")
GP = Country(id=82, name="Guadeloupe", alias="GP")
GQ = Country(id=83, name="Equatorial Guinea", alias="GQ")
GR = Country(id=84, name="Greece", alias="GR")
GS = Country(id=85, name="South Georgia and the South Sandwich Islands", alias="GS")
GT = Country(id=86, name="Guatemala", alias="GT")
GU = Country(id=87, name="Guam", alias="GU")
GW = Country(id=88, name="Guinea-Bissau", alias="GW")
GY = Country(id=89, name="Guyana", alias="GY")
HK = Country(id=90, name="Hong Kong", alias="HK")
HM = Country(id=91, name="Heard and McDonald Islands", alias="HM")
HN = Country(id=92, name="Honduras", alias="HN")
HR = Country(id=93, name="Croatia", alias="HR")
HT = Country(id=94, name="Haiti", alias="HT")
HU = Country(id=95, name="Hungary", alias="HU")
ID = Country(id=96, name="Indonesia", alias="ID")
IE = Country(id=97, name="Ireland", alias="IE")
IL = Country(id=98, name="Israel", alias="IL")
IM = Country(id=99, name="Isle of Man", alias="IM")
IN = Country(id=100, name="India", alias="IN")
IQ = Country(id=101, name="Iraq", alias="IQ")
IR = Country(id=102, name="Iran", alias="IR")
IS = Country(id=103, name="Iceland", alias="IS")
IT = Country(id=104, name="Italy", alias="IT")
JE = Country(id=105, name="Jersey", alias="JE")
JM = Country(id=106, name="Jamaica", alias="JM")
JO = Country(id=107, name="Jordan", alias="JO")
JP = Country(id=108, name="Japan", alias="JP")
KE = Country(id=109, name="Kenya", alias="KE")
KG = Country(id=110, name="Kyrgyzstan", alias="KG")
KH = Country(id=111, name="Cambodia", alias="KH")
KI = Country(id=112, name="Kiribati", alias="KI")
KM = Country(id=113, name="Comoros", alias="KM")
KN = Country(id=114, name="Saint Kitts And Nevis", alias="KN")
KP = Country(id=115, name="North Korea", alias="KP")
KR = Country(id=116, name="South Korea", alias="KR")
KW = Country(id=117, name="Kuwait", alias="KW")
KY = Country(id=118, name="Cayman Islands", alias="KY")
KZ = Country(id=119, name="Kazakhstan", alias="KZ")
LA = Country(id=120, name="Lao People's Democratic Republic", alias="LA")
LB = Country(id=121, name="Lebanon", alias="LB")
LC = Country(id=122, name="Saint Lucia", alias="LC")
LI = Country(id=123, name="Liechtenstein", alias="LI")
LK = Country(id=124, name="Sri Lanka", alias="LK")
LR = Country(id=125, name="Liberia", alias="LR")
LS = Country(id=126, name="Lesotho", alias="LS")
LT = Country(id=127, name="Lithuania", alias="LT")
LU = Country(id=128, name="Luxembourg", alias="LU")
LV = Country(id=129, name="Latvia", alias="LV")
LY = Country(id=130, name="Libya", alias="LY")
MA = Country(id=131, name="Morocco", alias="MA")
MC = Country(id=132, name="Monaco", alias="MC")
MD = Country(id=133, name="Moldova", alias="MD")
ME = Country(id=134, name="Montenegro", alias="ME")
MF = Country(id=135, name="Saint Martin", alias="MF")
MG = Country(id=136, name="Madagascar", alias="MG")
MH = Country(id=137, name="Marshall Islands", alias="MH")
MK = Country(id=138, name="Macedonia", alias="MK")
ML = Country(id=139, name="Mali", alias="ML")
MM = Country(id=140, name="Myanmar", alias="MM")
MN = Country(id=141, name="Mongolia", alias="MN")
MO = Country(id=142, name="Macao", alias="MO")
MP = Country(id=143, name="Northern Mariana Islands", alias="MP")
MQ = Country(id=144, name="Martinique", alias="MQ")
MR = Country(id=145, name="Mauritania", alias="MR")
MS = Country(id=146, name="Montserrat", alias="MS")
MT = Country(id=147, name="Malta", alias="MT")
MU = Country(id=148, name="Mauritius", alias="MU")
MV = Country(id=149, name="Maldives", alias="MV")
MW = Country(id=150, name="Malawi", alias="MW")
MX = Country(id=151, name="Mexico", alias="MX")
MY = Country(id=152, name="Malaysia", alias="MY")
MZ = Country(id=153, name="Mozambique", alias="MZ")
NA = Country(id=154, name="Namibia", alias="NA")
NC = Country(id=155, name="New Caledonia", alias="NC")
NE = Country(id=156, name="Niger", alias="NE")
NF = Country(id=157, name="Norfolk Island", alias="NF")
NG = Country(id=158, name="Nigeria", alias="NG")
NI = Country(id=159, name="Nicaragua", alias="NI")
NL = Country(id=160, name="Netherlands", alias="NL")
NO = Country(id=161, name="Norway", alias="NO")
NP = Country(id=162, name="Nepal", alias="NP")
NR = Country(id=163, name="Nauru", alias="NR")
NU = Country(id=164, name="Niue", alias="NU")
NZ = Country(id=165, name="New Zealand", alias="NZ")
OM = Country(id=166, name="Oman", alias="OM")
PA = Country(id=167, name="Panama", alias="PA")
PE = Country(id=168, name="Peru", alias="PE")
PF = Country(id=169, name="French Polynesia", alias="PF")
PG = Country(id=170, name="Papua New Guinea", alias="PG")
PH = Country(id=171, name="Philippines", alias="PH")
PK = Country(id=172, name="Pakistan", alias="PK")
PL = Country(id=173, name="Poland", alias="PL")
PM = Country(id=174, name="Saint Pierre And Miquelon", alias="PM")
PN = Country(id=175, name="Pitcairn", alias="PN")
PR = Country(id=176, name="Puerto Rico", alias="PR")
PS = Country(id=177, name="Palestine", alias="PS")
PT = Country(id=178, name="Portugal", alias="PT")
PW = Country(id=179, name="Palau", alias="PW")
PY = Country(id=180, name="Paraguay", alias="PY")
QA = Country(id=181, name="Qatar", alias="QA")
RE = Country(id=182, name="Réunion", alias="RE")
RO = Country(id=183, name="Romania", alias="RO")
RS = Country(id=184, name="Serbia", alias="RS")
RU = Country(id=185, name="Russia", alias="RU")
RW = Country(id=186, name="Rwanda", alias="RW")
SA = Country(id=187, name="Saudi Arabia", alias="SA")
SB = Country(id=188, name="Solomon Islands", alias="SB")
SC = Country(id=189, name="Seychelles", alias="SC")
SD = Country(id=190, name="Sudan", alias="SD")
SE = Country(id=191, name="Sweden", alias="SE")
SG = Country(id=192, name="Singapore", alias="SG")
SH = Country(id=193, name="Saint Helena", alias="SH")
SI = Country(id=194, name="Slovenia", alias="Slovenia")
SJ = Country(id=195, name="Svalbard And Jan Mayen", alias="SJ")
SK = Country(id=196, name="Slovakia", alias="SK")
SL = Country(id=197, name="Sierra Leone", alias="SL")
SM = Country(id=198, name="San Marino", alias="SM")
SN = Country(id=199, name="Senegal", alias="Senegal")
SO = Country(id=200, name="Somalia", alias="Somalia")
SR = Country(id=201, name="Suriname", alias="SR")
SS = Country(id=202, name="South Sudan", alias="SS")
ST = Country(id=203, name="Sao Tome and Principe", alias="ST")
SV = Country(id=204, name="El Salvador", alias="SV")
SX = Country(id=205, name="Sint Maarten", alias="SX")
SY = Country(id=206, name="Syrian Arab Republic", alias="SY")
SZ = Country(id=207, name="Swaziland", alias="SZ")
TC = Country(id=208, name="Turks and Caicos Islands", alias="TC")
TD = Country(id=209, name="Chad", alias="TD")
TF = Country(id=210, name="French Southern Territories", alias="TF")
TG = Country(id=211, name="Togo", alias="TG")
TH = Country(id=212, name="Thailand", alias="TH")
TJ = Country(id=213, name="Tajikistan", alias="TJ")
TK = Country(id=214, name="Tokelau", alias="TK")
TL = Country(id=215, name="Timor-Leste", alias="TL")
TM = Country(id=216, name="Turkmenistan", alias="TM")
TN = Country(id=217, name="Tunisia", alias="TN")
TO = Country(id=218, name="Tonga", alias="TO")
TR = Country(id=219, name="Turkey", alias="TR")
TT = Country(id=220, name="Trinidad and Tobago", alias="TT")
TV = Country(id=221, name="Tuvalu", alias="TV")
TW = Country(id=222, name="Taiwan", alias="TW")
TZ = Country(id=223, name="Tanzania", alias="TZ")
UA = Country(id=224, name="Ukraine", alias="UA")
UG = Country(id=225, name="Uganda", alias="UG")
UM = Country(id=226, name="United States Minor Outlying Islands", alias="UM")
US = Country(id=227, name="United States", alias="US")
UY = Country(id=228, name="Uruguay", alias="UY")
UZ = Country(id=229, name="Uzbekistan", alias="UZ")
VA = Country(id=230, name="Holy See", alias="VA")
VC = Country(id=231, name="Saint Vincent And The Grenadines", alias="VC")
VE = Country(id=232, name="Venezuela", alias="VE")
VG = Country(id=233, name="Virgin Islands, British", alias="VG")
VI = Country(id=234, name="Virgin Islands, U.S", alias="VI")
VN = Country(id=235, name="Vietnam", alias="VN")
VU = Country(id=236, name="Vanuatu", alias="VU")
WF = Country(id=237, name="Wallis and Futuna", alias="WF")
WS = Country(id=238, name="Samoa", alias="WF")
YE = Country(id=239, name="Yemen", alias="YE")
YT = Country(id=240, name="Mayotte", alias="YT")
ZA = Country(id=241, name="South Africa", alias="ZA")
ZM = Country(id=242, name="Zambia", alias="ZM")
ZW = Country(id=243, name="Zimbabwe", alias="ZW")

AD.insert()
AE.insert()
AF.insert()
AG.insert()
AI.insert()
AL.insert()
AM.insert()
AN.insert()
AO.insert()
AQ.insert()
AR.insert()
AS.insert()
AT.insert()
AU.insert()
AW.insert()
AX.insert()

AZ.insert()
BA.insert()
BB.insert()
BD.insert()
BE.insert()
BF.insert()
BG.insert()
BH.insert()
BQ.insert()
BR.insert()
BS.insert()
BT.insert()
BV.insert()
BW.insert()
BY.insert()
BZ.insert()
CA.insert()
CC.insert()
CF.insert()
CG.insert()
CH.insert()
CI.insert()
CR.insert()
CU.insert()
CV.insert()
CW.insert()
CX.insert()
CY.insert()
CZ.insert()
DE.insert()
DJ.insert()
DK.insert()
DM.insert()
DO.insert()
DZ.insert()
EC.insert()
EE.insert()
EG.insert()
EH.insert()
ER.insert()
ES.insert()
ET.insert()
EU.insert()
FI.insert()
FJ.insert()
FK.insert()
FM.insert()
FO.insert()
FR.insert()
GA.insert()
GB.insert()
GD.insert()
GE.insert()
GF.insert()
GG.insert()
GH.insert()
GI.insert()
GL.insert()
GM.insert()
GN.insert()
GP.insert()
GQ.insert()
GR.insert()
GS.insert()
GT.insert()
GU.insert()
GW.insert()
GY.insert()
HK.insert()
HM.insert()
HN.insert()
HR.insert()
HT.insert()
HU.insert()
ID.insert()
IE.insert()
IL.insert()
IM.insert()
IN.insert()
IQ.insert()
IR.insert()
IS.insert()
IT.insert()
JE.insert()
JM.insert()
JO.insert()
JP.insert()
KE.insert()
KG.insert()
KH.insert()
KI.insert()
KM.insert()
KN.insert()
KP.insert()
KR.insert()
KW.insert()
KY.insert()
KZ.insert()
LA.insert()
LB.insert()
LC.insert()
LI.insert()
LK.insert()
LR.insert()
LS.insert()
LT.insert()
LU.insert()
LV.insert()
LY.insert()
MA.insert()
MC.insert()
MD.insert()
ME.insert()
MF.insert()
MG.insert()
MH.insert()
MK.insert()
ML.insert()
MM.insert()
MN.insert()
MO.insert()
MP.insert()
MQ.insert()
MR.insert()
MS.insert()
MT.insert()
MU.insert()
MV.insert()
MW.insert()
MX.insert()
MY.insert()
MZ.insert()
NA.insert()
NC.insert()
NE.insert()
NF.insert()
NG.insert()
NI.insert()
NL.insert()
NO.insert()
NP.insert()
NR.insert()
NU.insert()
NZ.insert()
OM.insert()
PA.insert()
PE.insert()
PF.insert()
PG.insert()
PH.insert()
PK.insert()
PL.insert()
PM.insert()
PN.insert()
PR.insert()
PS.insert()
PT.insert()
PW.insert()
PY.insert()
QA.insert()
RE.insert()
RO.insert()
RS.insert()
RU.insert()
RW.insert()
SA.insert()
SB.insert()
SC.insert()
SD.insert()
SE.insert()
SG.insert()
SH.insert()
SI.insert()
SJ.insert()
SK.insert()
SL.insert()
SM.insert()
SN.insert()
SO.insert()
SR.insert()
SS.insert()
ST.insert()
SV.insert()
SX.insert()
SY.insert()
SZ.insert()
TC.insert()
TD.insert()
TF.insert()
TG.insert()
TH.insert()
TJ.insert()
TK.insert()
TL.insert()
TM.insert()
TN.insert()
TO.insert()
TR.insert()
TT.insert()
TV.insert()
TW.insert()
TZ.insert()
UA.insert()
UG.insert()
UM.insert()
US.insert()
UY.insert()
UZ.insert()
VA.insert()
VC.insert()
VE.insert()
VG.insert()
VI.insert()
VN.insert()
VU.insert()
WF.insert()
WS.insert()
YE.insert()
YT.insert()
ZA.insert()
ZM.insert()
ZW.insert()


AD.add_destination(AF)
AD.add_destination(AM)

AM.add_destination(AQ)


AN.add_destination(AU)

AU.add_destination(AM)
AU.add_destination(AS)
AU.add_destination(AQ)
AU.add_destination(AR)
AU.add_destination(AO)
AU.add_destination(AI)
AU.add_destination(AT)

AT.add_destination(AU)
AT.add_destination(AW)

AI.add_destination(AU)

AR.add_destination(AU)

AF.add_destination(AD)

#-------------------------------------------- Fake Data --------------------------------


#----------------------------------------------------------------------------------
# todo: think about scenario when user changes their location. they're already in the table and we do a POST, which will fail.

@app.route('/users/add', methods=['POST'])
@requires_auth('get:countries')
def add_user(payload):
    try:
        body = request.get_json()
        print("bla")
        user_id = body.get('userId')
        name = body.get('name') #TODO remove email and name they are stored on Auth0? (If user changes their email)
        email = body.get('email')
        country_id = body.get('countryId')
        if country_id == '':
            raise Exception("the user country is empty! :OO")
        user = User.query.filter(User.user_id == user_id).first()
        if user is None:
            user = User(user_id, name, email, country_id)
            user.insert()
        else:
            user.country_id = country_id
            user.update()

        return jsonify({
            'new_user': user.short(),
        })
    except Exception as e:
        print(e)
        abort(422)


@app.route('/countries')
@requires_auth('get:countries')
def get_countries(payload):
    countries = Country.query.all()
    # print([country.short() for country in countries])
    return jsonify({
        'countries': [country.short() for country in countries]
    })


@app.route('/users/<string:user_id>')
@requires_auth('get:countries')
def get_country_for_user(payload, user_id):
    user = User.query.filter(User.user_id == user_id).first()
    if user is not None:
        return jsonify({
            'country_id': user.country_id
        })
    else:
        return jsonify({
            'country_id': '' #todo empty ?
        })


@app.route('/countries/<int:country_id>')
@requires_auth('get:countries')
def get_country(payload, country_id):
    country = Country.query.filter(Country.id == country_id).first()
    return jsonify({
        'country': country.long()
    })


@app.route('/countries/<int:country_id>/destinations')
@requires_auth('get:countries') #todo change to get:destinations or something
def get_destinations(payload, country_id):
    country = Country.query.filter(Country.id == country_id).first()
    print("getting destinations for country: " + country.name)
    data = []
    print(country.destinations)
    for dest in country.destinations:
        if country in Country.query.filter(Country.id == dest.id).first().destinations:
            data.append(dest)

    print("these are the destinations for " + country.name + ": ")
    for item in data:
        print(item.short())
    return jsonify({
        'destinations': [item.short() for item in data]
    })


@app.route('/countries/<int:country_id>/add_destination', methods=['PATCH'])
@requires_auth('get:countries')
def add_destination(payload, country_id):

    try:
        country = Country.query.filter(Country.id == country_id).first()
        body = request.get_json()
        destination_id = body.get('destinationId')
        print("destination id: " + destination_id)
        destination = Country.query.filter(Country.id == destination_id).first()
        if destination not in country.destinations:
            country.destinations.append(destination)
        country.update()

        return jsonify({
            # 'success': True,
            'destinations': [destination.short() for destination in country.destinations],
        })
    except Exception as e:
        print(e)


@app.route('/countries/<int:country_id>/delete_destination', methods=['DELETE'])
@requires_auth('get:countries')
def delete_destination(payload, country_id):

    try:
        country = Country.query.filter(Country.id == country_id).first()
        body = request.get_json()
        destination_id = body.get('destinationId')
        print(destination_id)
        destination = Country.query.filter(Country.id == destination_id).first()
        country.destinations.remove(destination)
        country.update()

        return jsonify({
            # 'success': True,
            'destinations': [destination.short() for destination in country.destinations],
        })
    except Exception as e:
        print(e)


#   return app
#
# APP = create_app()
#
# if __name__ == '__main__':
#     APP.run(debug=True)
#     # host='0.0.0.0', port=8080,
